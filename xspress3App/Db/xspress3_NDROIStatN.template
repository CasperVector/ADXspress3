#=================================================================#
# Template file: xspress3_NDROIStatN.template
###################################################################
#
# This template changes how NDROIStatNs ROIs are defined to conform
# with the previous Xspress3 design and exposes a time series of the
# sum of counts in the ROI.
#
# Macros:
# % macro, P, Device prefix
# % macro, S, Base PV name
# % macro, XSP3_PORT, Asyn port name of the xspress3
# % macro, CHAN, Channel number
# % macro, ROI, ROI number
# % macro, NCHANS, Number of elements in stats waveforms
# % macro, ADDR, Asyn address to use on the NDROIStat asyn port (usually ROI - 1)
# % macro, TIMEOUT, Asyn port timeout
#
###################################################################

substitute "PORT=$(XSP3_PORT)"

# % $(ADDR)
# % $(NCHANS)
# % $(TIMEOUT)

# ///
# /// Set the MCA ROI$(ROI) high level limit on channel $(CHAN)
# ///
record(calcout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_CALC_HI")
{
   field(INPA, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_HLM")
   field(INPB, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_LLM")
   field(CALC, "A-B")
   field(OUT,  "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_CALC_HI:DFAN PP")
   field(OOPT, "On Change")
}

record(dfanout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_CALC_HI:DFAN")
{
    field(OUTA, "$(P)$(S)C$(CHAN)_ROI:$(ROI):SizeX PP")
    field(OUTB, "$(P)$(S)C$(CHAN)_ROISUM:$(ROI):SizeX PP")
}

record(longout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_HLM")
{
    field(PINI, 1)
    field(FLNK, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_CALC_HI")
}

# ///
# /// Get the MCA ROI$(ROI) high level limit on channel $(CHAN)
# ///
record(calc, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_HLM_RBV")
{
   field(PINI, "1")
   field(INPA, "$(P)$(S)C$(CHAN)_ROI:$(ROI):SizeX_RBV")
   field(INPB, "$(P)$(S)C$(CHAN)_ROI:$(ROI):MinX_RBV")
   field(CALC, "B+A")
}

# ///
# /// Set the MCA ROI$(ROI) low level limit on channel $(CHAN)
# ///
record(longout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_LLM")
{
    field(PINI, 1)
    field(OUT,  "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_LLM:DFAN PP")
    field(FLNK, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_CALC_HI")
}

record(dfanout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_LLM:DFAN")
{
    field(OUTA, "$(P)$(S)C$(CHAN)_ROI:$(ROI):MinX PP")
    field(OUTB,  "$(P)$(S)C$(CHAN)_ROISUM:$(ROI):MinX PP")
}

# ///
# /// Get the MCA ROI$(ROI) low level limit on channel $(CHAN)
# ///
record(longin, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_LLM_RBV")
{
   field(PINI, "1")
   field(INP, "$(P)$(S)C$(CHAN)_ROI:$(ROI):MinX_RBV PP")
}

record(bo, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_USE")
{
    field(VAL,  "0")
    field(ZNAM, "No")
    field(ONAM, "Yes")
    field(OUT, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_USE:DFAN PP")
}

record(dfanout, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_USE:DFAN")
{
    field(OUTA, "$(P)$(S)C$(CHAN)_ROI:$(ROI):Use PP")
    field(OUTB, "$(P)$(S)C$(CHAN)_ROISUM:$(ROI):Use PP")
}


record(bo, "$(P)$(S)C$(CHAN)_ROI:$(ROI):PushUse")
{
    field(DOL, "$(P)$(S)C$(CHAN)_PluginControlVal CP")
    field(OMSL, "closed_loop")
    field(OUT, "$(P)$(S)C$(CHAN)_MCA_ROI$(ROI)_USE PP")
}

substitute "R=$(S)C$(CHAN)_ROI:$(ROI):, PORT=$(XSP3_PORT).ROISTAT$(CHAN)"
include "NDROIStatN.template"
alias("$(P)$(S)C$(CHAN)_ROI:$(ROI):TSTotal", "$(P)$(S)C$(CHAN)_ROI$(ROI):ArrayData_RBV")
alias("$(P)$(S)C$(CHAN)_ROI:$(ROI):Total_RBV", "$(P)$(S)C$(CHAN)_ROI$(ROI):Value_RBV")

substitute "R=$(S)C$(CHAN)_ROISUM:$(ROI):, PORT=$(XSP3_PORT).ROISUMSTAT$(CHAN)"
include "NDROIStatN.template"
alias("$(P)$(S)C$(CHAN)_ROISUM:$(ROI):TSTotal", "$(P)$(S)C$(CHAN)_ROISUM$(ROI):ArrayData_RBV")
alias("$(P)$(S)C$(CHAN)_ROISUM:$(ROI):Total_RBV", "$(P)$(S)C$(CHAN)_ROISUM$(ROI):Value_RBV")
